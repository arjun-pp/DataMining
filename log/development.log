  [1m[36m (163.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (64.6ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddCities (20160820063645)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820063645_add_cities.rb:8)
  [1m[36m (111.4ms)[0m  [1mCREATE TABLE "cities" ("id" serial primary key, "name" text NOT NULL, "polygon" text, "lat" decimal, "long" decimal, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160820063645"]]
  [1m[36m (20.1ms)[0m  [1mCOMMIT[0m
Migrating to AddSectors (20160820085359)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820085359_add_sectors.rb:8)
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (11.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddSectors (20160820085359)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820085359_add_sectors.rb:8)
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddSectors (20160820085359)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820085359_add_sectors.rb:8)
  [1m[36m (13.8ms)[0m  [1mCREATE UNIQUE INDEX  "index_sectors_on_name_and_city_id" ON "sectors"  ("name", "city_id")[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddSectors (20160820085359)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820085359_add_sectors.rb:8)
  [1m[36m (0.7ms)[0m  [1mCREATE UNIQUE INDEX  "index_sectors_on_name_and_polygon" ON "sectors"  ("name", "polygon")[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddSectors (20160820085359)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820085359_add_sectors.rb:8)
  [1m[36m (124.4ms)[0m  [1mCREATE TABLE "sectors" ("id" serial primary key, "name" text NOT NULL, "polygon" text, "lat" decimal, "long" decimal, "created_at" timestamp, "updated_at" timestamp, "real_estate_cost" integer) [0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160820085359"]]
  [1m[36m (16.8ms)[0m  [1mCOMMIT[0m
Migrating to AddAreas (20160820090424)
  [1m[35m (0.3ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820090424_add_areas.rb:8)
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX  "index_areas_on_name_and_sector_id" ON "areas"  ("name", "sector_id")[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddAreas (20160820090424)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820090424_add_areas.rb:8)
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_areas_on_name_and_sector_id" ON "areas"  ("name", "sector_id")[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddAreas (20160820090424)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820090424_add_areas.rb:8)
  [1m[36m (169.9ms)[0m  [1mCREATE TABLE "areas" ("id" serial primary key, "name" text NOT NULL, "polygon" text, "lat" decimal, "long" decimal, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160820090424"]]
  [1m[36m (21.2ms)[0m  [1mCOMMIT[0m
Migrating to AddNeighbourhoods (20160820091519)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820091519_add_neighbourhoods.rb:8)
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX  "index_neighbourhoods_on_name_and_area_id" ON "neighbourhoods"  ("name", "area_id")[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddNeighbourhoods (20160820091519)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /home/james_alcatraz/rootsai/data-mining/db/migrate/20160820091519_add_neighbourhoods.rb:8)
  [1m[36m (153.7ms)[0m  [1mCREATE TABLE "neighbourhoods" ("id" serial primary key, "name" text NOT NULL, "polygon" text, "lat" decimal, "long" decimal, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160820091519"]]
  [1m[36m (23.3ms)[0m  [1mCOMMIT[0m
Migrating to AddNeighborhoodData (20160826090400)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (193.6ms)[0m  [1mCREATE TABLE "neighbourhood_data" ("id" serial primary key, "name" text, "source_url" text, "html_data" text, "data_css" text) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160826090400"]]
  [1m[36m (14.7ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (53.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'areas'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.9ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'cities'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'neighbourhood_data'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.8ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'neighbourhoods'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'sectors'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
